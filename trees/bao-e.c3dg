fov{z -5}

bao {
  *{s .1 y -14 x -2}
  3*{x 2}
  baochunk{
    ry RYY
    rx RYY-300
  }
}

DEF WD 14.0-(RYY-180)/90*6

baochunk {
  *{{Snext=coalesce(Snext, 1)}} {
    //treeSeg{s 4 L .4}
    5*{y rndf()*.2 x rndf()*.5 ry 90} {
      bnCONE{s WD .6 WD {bent=.01+rndf()*.1;F=.03;n=30
        q=Snext; NBEXCL=floor(i/100)} RGB #505040 L -.1*rndf()
        A sin(RYY/10)
      }
      hash{ry irndf(360) s 8 z -.5 s .25 
        A -.5 rz 0}
    }
    if (i < 240) { // and nbdist(x,y+.07,z, .2, 1, 1) > .01) {
      baochunk{{i=i+1} y .39 s Snext {Snext=.98+rndf()*.02} ry (2+rndf())*3 
      rz pareto(1,5,5)+sin((RYY-265)/10)*2}
    }
    if (i = 240) {
      CIRCLE{s 8 rx 90 L .2}
    }
    if (i > 50 and rndf() < .05 and BAO < 3 and i < 80
      and j < i - 4) {
      *{{SY=.6+rndf()*.4;i=i+(1-SY)*20}}
        baochunk{y -.5 ry rndf()*180 rz 80 y .5 s SY 
          {BAO=BAO+1; j=i;}}
    }
  }
}

include #geometry

light {AMBIENT s .25}
light {PHONG specular 10 alpha 10 s 1.5 {RGB 1 1 1}
  point(
    0,30,-2
  )
}



rule hash{ hrect3338{y -.2} }
path hrect3338 {
    moveto(-0.335, 0.702, 0.000)
    lineto(-0.364, 0.700, 0.000)
    lineto(-0.358, 0.599, 0.000)
    lineto(-0.370, 0.600, 0.000)
    lineto(-0.436, -0.009, 0.000)
    lineto(-0.468, 0.682, 0.000)
    lineto(-0.497, 0.681, 0.000)
    lineto(-0.456, -0.196, 0.000)
    lineto(-0.466, -0.293, 0.000)
    lineto(-0.438, -0.296, 0.000)
    lineto(-0.429, -0.215, 0.000)
    lineto(-0.426, -0.215, 0.000)
    lineto(-0.427, -0.197, 0.000)
    lineto(-0.352, 0.499, 0.000)
    lineto(-0.311, -0.197, 0.000)
    lineto(-0.284, -0.195, 0.000)
    lineto(-0.287, -0.275, 0.000)
    lineto(-0.258, -0.276, 0.000)
    lineto(-0.221, 0.598, 0.000)
    lineto(-0.187, -0.200, 0.000)
    lineto(-0.158, -0.198, 0.000)
    lineto(-0.196, 0.699, 0.000)
    lineto(-0.225, 0.698, 0.000)
    lineto(-0.222, 0.622, 0.000)
    lineto(-0.248, 0.623, 0.000)
    lineto(-0.283, -0.187, 0.000)
    lineto(-0.335, 0.702, 0.000)
    close
    moveto(0.095, 0.702, 0.000)
    lineto(0.066, 0.700, 0.000)
    lineto(0.072, 0.599, 0.000)
    lineto(0.060, 0.600, 0.000)
    lineto(-0.009, -0.037, 0.000)
    lineto(-0.089, 0.698, 0.000)
    lineto(-0.117, 0.695, 0.000)
    lineto(-0.110, 0.623, 0.000)
    lineto(-0.127, 0.623, 0.000)
    lineto(-0.119, -0.276, 0.000)
    lineto(-0.090, -0.275, 0.000)
    lineto(-0.097, 0.505, 0.000)
    lineto(-0.023, -0.171, 0.000)
    lineto(-0.036, -0.293, 0.000)
    lineto(-0.008, -0.296, 0.000)
    lineto(0.003, -0.196, 0.000)
    lineto(0.009, -0.195, 0.000)
    lineto(0.006, -0.171, 0.000)
    lineto(0.078, 0.499, 0.000)
    lineto(0.119, -0.197, 0.000)
    lineto(0.147, -0.195, 0.000)
    lineto(0.143, -0.275, 0.000)
    lineto(0.172, -0.276, 0.000)
    lineto(0.209, 0.598, 0.000)
    lineto(0.243, -0.200, 0.000)
    lineto(0.271, -0.198, 0.000)
    lineto(0.269, -0.228, 0.000)
    lineto(0.279, -0.229, 0.000)
    lineto(0.269, -0.297, 0.000)
    lineto(0.297, -0.302, 0.000)
    lineto(0.417, 0.460, 0.000)
    lineto(0.451, -0.218, 0.000)
    lineto(0.480, -0.217, 0.000)
    lineto(0.434, 0.680, 0.000)
    lineto(0.406, 0.679, 0.000)
    lineto(0.410, 0.590, 0.000)
    lineto(0.408, 0.590, 0.000)
    lineto(0.305, -0.065, 0.000)
    lineto(0.336, 0.668, 0.000)
    lineto(0.307, 0.669, 0.000)
    lineto(0.271, -0.182, 0.000)
    lineto(0.234, 0.699, 0.000)
    lineto(0.205, 0.698, 0.000)
    lineto(0.208, 0.622, 0.000)
    lineto(0.182, 0.623, 0.000)
    lineto(0.147, -0.187, 0.000)
    lineto(0.095, 0.702, 0.000)
    close
}


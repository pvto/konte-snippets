fov{z -1.5}
foo{
  RIM{s .5 x -.3 {ANG=360;rim=.1}} 
  RIM {s .5 x .3 {ANG=270;rim=.2}}
  RIM {s .5 y .2 {ANG=-900;rim=.01}}
}
RIM{ RIM__{{rim__=1-rim}} }
path RIM__ {
  moveto(0,.5,0)
  bend(cos((90+90)*RAD)*SECLB, .5, 0)
  bend(.5*cos((90+ANG/4)*RAD) + cos((ANG/4)*RAD)*SECLB, 
      .5*sin((90+ANG/4)*RAD) + sin((ANG/4)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG/4)*RAD), .5*sin((90+ANG/4)*RAD), 0)
  bend(.5*cos((90+ANG/4)*RAD) + cos((90+ANG/4+90)*RAD)*SECLB,
      .5*sin((90+ANG/4)*RAD) + sin((90+ANG/4+90)*RAD)*SECLB, 0)
  bend(.5*cos((90+ANG/4*2)*RAD) + cos((ANG/4*2)*RAD)*SECLB, 
      .5*sin((90+ANG/4*2)*RAD) + sin((ANG/4*2)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG/4*2)*RAD), .5*sin((90+ANG/4*2)*RAD), 0)
  bend(.5*cos((90+ANG/4*2)*RAD) + cos((90+ANG/4*2+90)*RAD)*SECLB,
      .5*sin((90+ANG/4*2)*RAD) + sin((90+ANG/4*2+90)*RAD)*SECLB, 0)
  bend(.5*cos((90+ANG/4*3)*RAD) + cos((ANG/4*3)*RAD)*SECLB, 
      .5*sin((90+ANG/4*3)*RAD) + sin((ANG/4*3)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG/4*3)*RAD), .5*sin((90+ANG/4*3)*RAD), 0)
  bend(.5*cos((90+ANG/4*3)*RAD) + cos((90+ANG/4*3+90)*RAD)*SECLB,
      .5*sin((90+ANG/4*3)*RAD) + sin((90+ANG/4*3+90)*RAD)*SECLB, 0)
  bend(.5*cos((90+ANG/4*4)*RAD) + cos((ANG/4*4)*RAD)*SECLB, 
      .5*sin((90+ANG/4*4)*RAD) + sin((ANG/4*4)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG)*RAD), .5*sin((90+ANG)*RAD), 0)
  lineto(.5*cos((90+ANG)*RAD)*rim__, .5*sin((90+ANG)*RAD)*rim__, 0)

  bend(.5*cos((90+ANG/4*4)*RAD)*rim__ + cos((ANG/4*4)*RAD)*SECLB*rim__, 
      .5*sin((90+ANG/4*4)*RAD)*rim__ + sin((ANG/4*4)*RAD)*SECLB*rim__, 0)
  bend(.5*cos((90+ANG/4*3)*RAD)*rim__ + cos((90+ANG/4*3+90)*RAD)*SECLB*rim__, 
      .5*sin((90+ANG/4*3)*RAD)*rim__ + sin((90+ANG/4*3+90)*RAD)*SECLB*rim__, 0)
  curveto(.5*cos((90+ANG/4*3)*RAD)*rim__, .5*sin((90+ANG/4*3)*RAD)*rim__, 0)
  bend(.5*cos((90+ANG/4*3)*RAD)*rim__ + cos((ANG/4*3)*RAD)*SECLB*rim__, 
      .5*sin((90+ANG/4*3)*RAD)*rim__ + sin((ANG/4*3)*RAD)*SECLB*rim__, 0)
  bend(.5*cos((90+ANG/4*2)*RAD)*rim__ + cos((90+ANG/4*2+90)*RAD)*SECLB*rim__,
      .5*sin((90+ANG/4*2)*RAD)*rim__ + sin((90+ANG/4*2+90)*RAD)*SECLB*rim__, 0)
  curveto(.5*cos((90+ANG/4*2)*RAD)*rim__, .5*sin((90+ANG/4*2)*RAD)*rim__, 0)
  bend(.5*cos((90+ANG/4*2)*RAD)*rim__ + cos((ANG/4*2)*RAD)*SECLB*rim__, 
      .5*sin((90+ANG/4*2)*RAD)*rim__ + sin((ANG/4*2)*RAD)*SECLB*rim__, 0)
  bend(.5*cos((90+ANG/4)*RAD)*rim__ + cos((90+ANG/4+90)*RAD)*SECLB*rim__,
      .5*sin((90+ANG/4)*RAD)*rim__ + sin((90+ANG/4+90)*RAD)*SECLB*rim__, 0)
  curveto(.5*cos((90+ANG/4)*RAD)*rim__, .5*sin((90+ANG/4)*RAD)*rim__, 0)
  bend(.5*cos((90+ANG/4)*RAD)*rim__ + cos((ANG/4)*RAD)*SECLB*rim__, 
      .5*sin((90+ANG/4)*RAD)*rim__ + sin((ANG/4)*RAD)*SECLB*rim__, 0)
  bend(cos((90+90)*RAD)*SECLB*rim__, .5*rim__, 0)
  curveto(0, .5*rim__, 0)
  lineto(0,.5,0)
  close
}

include #geometry

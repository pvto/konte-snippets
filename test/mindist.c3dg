MACRO RNDNEG (-1+2*irndf(2))
MACRO SIGRND rndf()*RNDNEG
DEF MAX .25
DEF MIN .01
DEF MOUTH 120
fov { z -1 }

foo {
  //RIM{s .5 layer 1 {rim=.2}}
  800*{{N=N+1}}
    *{x rndf()-.5 y rndf()-.5}
    place{PUSH PACMAN}
  foobar{}
}
place {
  *{{MD=mindist(x,y,z,MAX)*2}} {
    if (MD > MIN) {
      POP{s min(MAX, MD)}
    }
    if (MD <= MIN) {
      place{x MAX*SIGRND y MAX*SIGRND R SIGRND}
    }
  }
  
}
foobar 1 {
  *{rz -45 x -1.5 z 1}400*{x .01}SQUARE{s .001 3 .001 layer -1}
}
foobar{ foobar{} }

PACMAN {
  *{{ANG=rndf()*MOUTH+360-MOUTH}}
  *{s (1/1.04**9)}
    10*{s 1.04 {No=No+1} L -L*.9+.99**No*RNDNEG}
      SECTOR {}
  CIRCLE{s .1 rz 30 y 2.5 z -1.5 L 1 S -1}
  *{L 1 rz -130 s .3 y 1.5 z -1 y rndf()*.1 x rndf()} {
    12*{rz 360/12} SQUARE{s .06 .5 .5 y .5}
    RIM{L 1 {rim=.15}}
  }
}




RIM{ RIM_{{ANG=360;rim__=1-rim}} }
path RIM_ {
  moveto(0,.5,0)
  bend(cos((90+90)*RAD)*SECLB, .5 + sin((90+90)*RAD)*SECLB, 0)
  bend(.5*cos((90+ANG/4)*RAD) + cos((ANG/4)*RAD)*SECLB, 
      .5*sin((90+ANG/4)*RAD) + sin((ANG/4)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG/4)*RAD), .5*sin((90+ANG/4)*RAD), 0)
  bend(.5*cos((90+ANG/4)*RAD) + cos((90+ANG/4+90)*RAD)*SECLB,
      .5*sin((90+ANG/4)*RAD) + sin((90+ANG/4+90)*RAD)*SECLB, 0)
  bend(.5*cos((90+ANG/4*2)*RAD) + cos((ANG/4*2)*RAD)*SECLB, 
      .5*sin((90+ANG/4*2)*RAD) + sin((ANG/4*2)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG/4*2)*RAD), .5*sin((90+ANG/4*2)*RAD), 0)
  bend(.5*cos((90+ANG/4*2)*RAD) + cos((90+ANG/4*2+90)*RAD)*SECLB,
      .5*sin((90+ANG/4*2)*RAD) + sin((90+ANG/4*2+90)*RAD)*SECLB, 0)
  bend(.5*cos((90+ANG/4*3)*RAD) + cos((ANG/4*3)*RAD)*SECLB, 
      .5*sin((90+ANG/4*3)*RAD) + sin((ANG/4*3)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG/4*3)*RAD), .5*sin((90+ANG/4*3)*RAD), 0)
  bend(.5*cos((90+ANG/4*3)*RAD) + cos((90+ANG/4*3+90)*RAD)*SECLB,
      .5*sin((90+ANG/4*3)*RAD) + sin((90+ANG/4*3+90)*RAD)*SECLB, 0)
  bend(.5*cos((90+ANG/4*4)*RAD) + cos((ANG/4*4)*RAD)*SECLB, 
      .5*sin((90+ANG/4*4)*RAD) + sin((ANG/4*4)*RAD)*SECLB, 0)
  curveto(.5*cos((90+ANG)*RAD), .5*sin((90+ANG)*RAD), 0)
  close
  moveto(0,.5*rim__,0)
  bend(0 + cos((90-ANG/4)*RAD)*SECLB*rim__, 
      .5 + sin((90-ANG/4)*RAD)*SECLB*rim__, 0)
  bend(.5*cos((90-ANG/4)*RAD)*rim__ + cos(ANG/4*RAD)*SECLB*rim__, 
      .5*sin((90-ANG/4)*RAD)*rim__ + sin(ANG/4*RAD)*SECLB*rim__, 0)
  curveto(.5*cos((90-ANG/4)*RAD)*rim__, .5*sin((90-ANG/4)*RAD)*rim__, 0)
  bend(.5*cos((90-ANG/4)*RAD)*rim__ + cos((90-ANG/4-90)*RAD)*SECLB*rim__,
      .5*sin((90-ANG/4)*RAD)*rim__ + sin((90-ANG/4-90)*RAD)*SECLB*rim__, 0)
  bend(.5*cos((90-ANG/4*2)*RAD)*rim__ + cos((90-ANG/4)*RAD)*SECLB*rim__, 
      .5*sin((90-ANG/4*2)*RAD)*rim__ + sin((90-ANG/4)*RAD)*SECLB*rim__, 0)
  curveto(.5*cos((90-ANG/4*2)*RAD)*rim__, .5*sin((90-ANG/4*2)*RAD)*rim__, 0)
  bend(.5*cos((90-ANG/4*2)*RAD)*rim__ + cos((-ANG/4*2)*RAD)*SECLB*rim__,
      .5*sin((90-ANG/4*2)*RAD)*rim__ + sin((-ANG/4*2)*RAD)*SECLB*rim__, 0)
  bend(.5*cos((90-ANG/4*3)*RAD)*rim__ + cos((-ANG/4)*RAD)*SECLB*rim__, 
      .5*sin((90-ANG/4*3)*RAD)*rim__ + sin((-ANG/4)*RAD)*SECLB*rim__, 0)
  curveto(.5*cos((90-ANG/4*3)*RAD)*rim__, .5*sin((90-ANG/4*3)*RAD)*rim__, 0)
  bend(.5*cos((90-ANG/4*3)*RAD)*rim__ + cos((90-ANG/4*3-90)*RAD)*SECLB*rim__,
      .5*sin((90-ANG/4*3)*RAD)*rim__ + sin((90-ANG/4*3-90)*RAD)*SECLB*rim__, 0)
  bend(.5*cos((90-ANG)*RAD)*rim__ + cos((90-ANG/4*4+90)*RAD)*SECLB*rim__, 
      .5*sin((90-ANG)*RAD)*rim__ + sin((90-ANG/4*4+90)*RAD)*SECLB*rim__, 0)
  curveto(.5*cos((90-ANG)*RAD)*rim__, .5*sin((90-ANG)*RAD)*rim__, 0)
  close
}

include #geometry
